services:

  # monitored services

  ## an init service to migrate (and create, if needed) the database
  init_database:
    build: rails_app
    env_file:
      - .env_rails
    environment:
      - SERVICE_NAME=init_database
    command: /rails/init_db.sh
    depends_on:
      - postgres

  ## HTTP service - Rails app
  web_app:
    build: rails_app
    env_file:
      - .env_rails
    environment:
      - SERVICE_NAME=web_app
    ports:
      - "3000:3000"
    depends_on:
      init_database:
        condition: service_completed_successfully

  ## jobs processing - SolidQueue
  jobs_app:
    build: rails_app
    env_file:
      - .env_rails
    command: bin/jobs
    environment:
      - SERVICE_NAME=jobs_app
    depends_on:
      init_database:
        condition: service_completed_successfully

  postgres:
    image: postgres:16
    environment:
      - POSTGRES_PASSWORD=postgres
    volumes:
      - ./volumes/postgres:/var/lib/postgresql/data:rw


  # monitoring services

  ## access telemetry data via Grafana
  grafana:
    image: grafana/grafana:11.6.0
    volumes:
      - ./rails_app/config/deploy/grafana/grafana.ini:/etc/grafana/grafana.ini
      - ./rails_app/config/deploy/grafana/provisioning:/etc/grafana/provisioning
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true # suitable only for local testing
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
    ports:
      - "3001:3000"

  ## logging
  vector:
    image: timberio/vector:0.46.1-alpine
    volumes:
      - ./rails_app/config/deploy/vector/vector.yaml:/etc/vector/vector.yaml
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - loki

  loki:
    image: grafana/loki:3.5.0
    command: [ "-config.file=/etc/loki/config.yaml" ]
    volumes:
      - ./rails_app/config/deploy/loki/config.yaml:/etc/loki/config.yaml
    ports:
      - "3100:3100"
    depends_on:
      - minio

  # tracing and metrics
  otelcol:
    image: otel/opentelemetry-collector-contrib:0.123.0
    command: [ "--config=/etc/otelcol-config.yml" ]
    environment:
      - OTEL_EXPORTER_OTLP_ENDPOINT=otelcol:4318
    volumes:
      - ./rails_app/config/deploy/opentelemetry-collector/otelcol-config.yml:/etc/otelcol-config.yml
      - /:/hostfs
    depends_on:
      - tempo
      - prometheus

  tempo:
    image: grafana/tempo:2.7.2
    command: [ "-config.file=/etc/tempo.yaml" ]
    volumes:
      - ./rails_app/config/deploy/tempo/tempo.yaml:/etc/tempo.yaml
      - ./rails_app/config/deploy/tempo/data:/tmp/tempo
    ports:
      - "3200:3200"   # tempo metrics
    depends_on:
      - minio

  ## metrics
  prometheus:
    image: prom/prometheus:v3.3.0
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--storage.tsdb.retention.time=30d'
      - '--web.enable-remote-write-receiver'
    ports:
      - "9090:9090"
    volumes:
      - ./rails_app/config/deploy/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml

  # general purpose object storage
  minio:
    image: minio/minio:RELEASE.2025-04-22T22-12-26Z
    entrypoint:
      - sh
      - -euc
      - |
        mkdir -p /data/loki-data && \
        mkdir -p /data/loki-ruler && \
        mkdir -p /data/tempo-data && \
        minio server /data
    environment:
      - MINIO_ROOT_USER=minio
      - MINIO_ROOT_PASSWORD=supersecret
      - MINIO_PROMETHEUS_AUTH_TYPE=public
      - MINIO_UPDATE=off
    volumes:
      - ./rails_app/config/deploy/minio:/data

