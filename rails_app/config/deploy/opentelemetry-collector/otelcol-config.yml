
receivers:
  otlp:
    protocols:
      http:
        endpoint: ${OTEL_EXPORTER_OTLP_ENDPOINT}
  hostmetrics:
    collection_interval: 10s
    root_path: /hostfs
    scrapers:
      cpu:
      memory:
      disk:
      filesystem:
      load:
      network:
      paging:
      processes:
      system:

exporters:
  otlp/tempo:
    endpoint: tempo:4317
    tls:
      insecure: true
  prometheusremotewrite:
    endpoint: http://prometheus:9090/api/v1/write
    external_labels:
      app: opentelemetry-rails-example # might be useful to set dynamically in case of multiple apps

processors:
  tail_sampling/traces:
    decision_wait: 10s
    policies:
      - name: drop_noise
        type: latency
        latency:
          threshold_ms: 10

  filter/spans_for_metrics:
    traces:
      span:
        - >
          instrumentation_scope.name != "OpenTelemetry::Instrumentation::Rack" and
          instrumentation_scope.name != "OpenTelemetry::Instrumentation::PG" and
          instrumentation_scope.name != "OpenTelemetry::Instrumentation::ActiveJob"

  batch:
    timeout: 15s
    send_batch_size: 1000

connectors:
  spanmetrics:
    histogram:
      explicit:
        buckets: [2ms, 4ms, 6ms, 8ms, 10ms, 50ms, 100ms, 200ms, 400ms, 800ms, 1s, 1400ms, 2s, 5s, 10s, 15s] # the default
    dimensions:
      - name: code.namespace
      - name: code.function
      - name: messaging.destination
      - name: messaging.active_job.adapter.name
      - name: http.route
      - name: http.status_code
      - name: http.method
      - name: db.system
    exemplars:
      enabled: true

service:
  pipelines:
    traces/all:
      receivers: [otlp]
      processors: [tail_sampling/traces]
      exporters: [otlp/tempo]

    traces/for_metrics:
      receivers: [otlp]
      processors: [filter/spans_for_metrics]
      exporters: [spanmetrics]

    metrics/from_spans:
      receivers: [spanmetrics]
      processors: [batch]
      exporters: [prometheusremotewrite]

    metrics/host:
      receivers: [hostmetrics]
      processors: [batch]
      exporters: [prometheusremotewrite]
